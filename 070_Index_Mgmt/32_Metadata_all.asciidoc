[[all-field]]
==== Metadata: _all Field
==== 메타데이터: _all 필드

In <<search-lite>>, we introduced the `_all` field: a special field that
indexes the ((("metadata, document", "_all field")))((("_all field", sortas="all field")))values from all other fields as one big string. The `query_string`
query clause (and searches performed as `?q=john`) defaults to searching in
the `_all` field if no other field is specified.

<<search-lite>>에서 `_all` 필드에 대해 소개한 바 있다. 이 필드는 인덱스 내의 다른 모든 필드의 값을 하나의 긴 문자열로 인덱스 하는 특수한 필드((("metadata, document", "_all field")))((("_all field", sortas="all field")))이다.
`query_string` 질의 구문 (그리고 `?q=john` 형식의 쿼리는) 특별히 검색을 수행할 필드가 지정되지 않으면 `_all` 필드에 대해 검색한다.

The `_all` field is useful during the exploratory phase of a new application,
while you are still unsure about the final structure that your documents will
have. You can throw any query string at it and you have a good chance of
finding the document you're after:

`_all` 필드는 새로운 응용 프로그램 개발의 사전 준비 단계에서 유용하게 사용할 수 있다.
이 단계에서는 문서의 최종 구조를 확정할 수 없기 때문이다.
다음과 같이 이 필드에 대해 임의의 쿼리를 실행할 수 있으며, 당신이 원하는 문서를 찾을 가능성이 높다.

[source,js]
--------------------------------------------------
GET /_search
{
    "match": {
        "_all": "john smith marketing"
    }
}
--------------------------------------------------


As your application evolves and your search requirements become more exacting,
you will find yourself using the `_all` field less and less. The `_all` field
is a shotgun approach to search. By querying individual fields, you have more
flexbility, power, and fine-grained control over which results are considered
to be most relevant.

당신의 응용 프로그램이 진화하고 검색에 대한 요구 사항이 더 정확해 지면서, 점점 `_all` 필드를 덜 사용하게 될 것이다.
`_all` 필드는 사격 범위가 넓은 샷건을 들고 사냥을 하는 것과 같다.
개별 필드에 대한 검색을 하게 되면, 더 높은 유연함과 강력함, 연관성이 더 높은 결과에 대한 세밀한 제어가 가능하게 된다.

[NOTE]
====
One of the important factors taken into account by the
<<relevance-intro,relevance algorithm>>
is the length of the field: the shorter the field, the more important. A term
that appears in a short `title` field is likely to be more important than the
same term that appears somewhere in a long `content` field. This distinction
between field lengths disappears in the `_all` field.
====

[NOTE]
====
<<relevance-intro,연관성 알고리즘>>에서 고려하는 요소 중 가장 중요한 것 중 하나는 필드의 길이이다.
필드가 짧을수록 중요도가 높다고 간주한다. 일반적으로, 더 짧은 `title` 필드에 저장된 단어는 더 긴 `content` 필드에 저장된
동일한 단어보다 더 중요도가 높다. `_all` 필드에서는 이런 필드 길이의 차이를 고려하지 않는다.
====


If you decide that you no longer need the `_all` field, you can disable it
with this mapping:

더 이상 `_all` 필드가 필요하지 않다고 판단하면, 다음과 같이 매핑을 설정하여 `_all` 필드를 비활성화 할 수 있다.

[source,js]
--------------------------------------------------
PUT /my_index/_mapping/my_type
{
    "my_type": {
        "_all": { "enabled": false }
    }
}
--------------------------------------------------


Inclusion in the `_all` field can be controlled on a field-by-field basis
by using the `include_in_all` setting, ((("include_in_all setting")))which defaults to `true`.  Setting
`include_in_all` on an object (or on the root object) changes the
default for all fields within that object.

`_all` 필드가 포함할 필드는 `include_in_all` 설정을 이용해 필드 단위로 조정할 수 있다.
이 설정의 기본값은 `true`이다. 한 객체 (혹은 루트 객체)에 대해 `include_in_all` 값을 설정하면,
그 객체 내의 모든 필드에 대한 기본값이 변경된다.

You may find that you want to keep the `_all` field around to use
as a catchall full-text field just for specific fields, such as
`title`, `overview`, `summary`, and `tags`. Instead of disabling the `_all`
field completely, disable `include_in_all` for all fields by default,
and enable it only on the fields you choose:

`_all` 필드를 `title`, `overview`, `summary`, `tags`등 특정한 필드만을 위한 전체 텍스트 검색 용도로 유지하고 싶을 수도 있다.
이런 경우 `_all` 필드를 완전히 비활성화 하는 대신, 다음과 같이 `include_in_all` 필드를 기본적으로는 비활성화 하되,
당신이 원하는 특정 필드들에 대해서만 활성화 하도록 한다.

[source,js]
--------------------------------------------------
PUT /my_index/my_type/_mapping
{
    "my_type": {
        "include_in_all": false,
        "properties": {
            "title": {
                "type":           "string",
                "include_in_all": true
            },
            ...
        }
    }
}
--------------------------------------------------


Remember that the `_all` field is just((("analyzers", "configuring for all field"))) an analyzed `string` field.  It
uses the default analyzer to analyze its values, regardless of which
analyzer has been set on the fields where the values originate.  And
like any `string` field, you can configure which analyzer the `_all`
field should use:

`_all` 필드는 단순한 분석된 `string` 필드임을 기억하도록 하자((("analyzers", "configuring for all field"))).
이 필드는 그 값을 구성하는 각각의 필드가 어떤 분석기를 사용하는지와 상관없이 기본 분석기를 사용한다.
그리고 다른 `string` 필드처럼, `_all` 필드가 어떤 분석기를 사용할 지 설정할 수 있다.

[source,js]
--------------------------------------------------
PUT /my_index/my_type/_mapping
{
    "my_type": {
        "_all": { "analyzer": "whitespace" }
    }
}
--------------------------------------------------
